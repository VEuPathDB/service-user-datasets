#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.2.0/libraries/base-service.raml

title: VEuPathDB Dataset Installer
version: 1.0.0
mediaType: application/json

uses:
  lib: schema/library.raml

/user-datasets:
  displayName: Datasets

  get:
    displayName: List User Datasets
    description: |
      Returns a list of user datasets available to the requesting user,
      optionally filtered by query parameters.
    queryParameters:
      project_id:
        displayName: Project ID Filter
        description: |
          ID of the VEuPathDB project that results should be filtered to.

          This means only user datasets that are relevant to the project ID
          given will be returned.
        type: lib.ProjectID
        example: PlasmoDB
        required: false
        default: null
      ownership:
        displayName: Dataset Ownership Filter
        description: |
          Ownership status filter.

          Enum of:

          * `any`
          * `owned`
          * `shared`

          If set to `any` the results are not filtered.

          If set to `owned`, the results will be filtered to only results that
          are owned by the requesting user.

          If set to `shared`, the results will be filtered to only results that
          are shared with the requesting user.
        type: string
        default: any
        required: false
      offset:
        displayName: Result Offset
        description: |
          This many results will be skipped before the first result returned.

          Used to implement result pagination.
        type: integer
        default: 0
        required: false
      limit:
        displayName: Result Count Limit
        description: |
          Limits the number of results returned to this count.

          Used to implement result pagination.
        type: integer
        default: 100
        minimum: 1
        maximum: 100
        required: false
    responses:
      200:
        description: Success
        body:
          type: lib.DatasetListEntry[]
          example:
          - datasetID: b18dcdf1a19c9415cd6594c00d611699
            ownerID: 123456
            datasetType:
              name: ISA
              version: "1.0"
            name: My Dataset
            summary: A short description of my dataset.
            description: A longer description of my dataset.
            projectIDs:
            - PlasmoDB
            - ToxoDB
            status:
            - projectID: PlasmoDB
              status: failed
            - projectID: ToxoDB
              status: complete
      400:
        description: Bad Query Parameter(s)
        body: lib.BadRequestError
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      500:
        description: Internal Error
        body: lib.ServerError

  post:
    displayName: Upload User Dataset
    body:
      multipart/form-data:
        type: lib.DatasetPostRequest
    responses:
      200:
        description: Success
        body:
          type: lib.DatasetPostResponse
          example:
            datasetID: b18dcdf1a19c9415cd6594c00d611699
      400:
        description: Request body did not resemble the expected form.
        body: lib.BadRequestError
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      422:
        description: Request failed validation.
        body: lib.UnprocessableEntityError
      500:
        description: Internal server error
        body: lib.ServerError

/user-datasets/rpc:
  displayName: RPC

  /reconcile:
    displayName: Reconciliation
    post:
      displayName: Run Reconciliation
      description: |
        Runs the Dataset Reconciliation process.

        TODO: DESCRIBE THIS PROCESS!
      body:
        application/json:
          type: lib.ReconciliationRequest
          example:
            authorization: 964d72e72d053d501f2949969849b96c31d7c3e829be03400641f80b821ef728
      responses:
        204:
          description: Action completed successfully.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        500:
          description: Internal server error.
          body: lib.ServerError

  /install-cleanup:
    displayName: Install Cleanup
    post:
      displayName: Run Install Cleanup
      description: |
        Marks all or target datasets that are in a status of installation
        failure into a ready-for-reinstall status.
      body:
        application/json: lib.InstallCleanupRequest
      responses:
        204:
          description: Action completed successfully.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        500:
          description: Internal server error.
          body: lib.ServerError

  /delete-cleanup:
    displayName: Deleted Dataset Cleanup
    post:
      displayName: Run Deleted Dataset Cleanup
      description: |
        Permanently delete jobs that were soft deleted more than 24 hours prior
        to the execution of this task.
      body:
        application/json: lib.DeleteCleanupRequest
      responses:
        204:
          description: Action completed successfully.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        500:
          description: Internal server error.
          body: lib.ServerError

/user-datasets/{vd-id}:
  displayName: Dataset by ID

  uriParameters:
    vd-id: lib.VDI-ID

  get:
    displayName: Lookup User Dataset
    description: |
      Fetch details about a user dataset and its status(es).
    responses:
      200:
        description: Target dataset was located and returned.
        body:
          type: lib.DatasetDetails
          example:
            datasetID: b18dcdf1a19c9415cd6594c00d611699
            ownerID: 123456
            datasetType:
              name: ISA
              version: "1.0"
            name: My Dataset
            summary: A short description of my dataset.
            description: A longer description of my dataset.
            projectIDs:
            - PlasmoDB
            - ToxoDB
            importMessages:
            - Import warning 1
            - Import warning 2
            installMessages:
              PlasmoDB:
              - Install warning 1
              - Install warning 2
              - Install Error
            status:
              import: imported
              install:
              - projectID: PlasmoDB
                status: failed
              - projectID: ToxoDB
                status: complete
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      404:
        description: |
          Target dataset was not located or is not visible to the requesting
          user.
        body: lib.NotFoundError
      500:
        description: Internal server error.
        body: lib.ServerError

  patch:
    displayName: Update User Dataset
    description: |
      Updates the metadata for a target dataset.
    body:
      application/json: lib.DatasetPatchRequest
    responses:
      204:
        description: Target dataset metadata was updated.
      400:
        description: Request body did not resemble the expected JSON form.
        body: lib.BadRequestError
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      403:
        description: Target dataset is not owned by the requesting user.
        body: lib.ForbiddenError
      404:
        description: Target dataset was not found.
        body: lib.NotFoundError
      422:
        description: Request body failed validation.
        body: lib.UnprocessableEntityError
      500:
        description: Internal server error.
        body: lib.ServerError

  delete:
    displayName: Delete User Dataset
    description: |
      Marks the target dataset as deleted.

      Datasets that have been marked as deleted are still recoverable for a
      short period of time before they are permanently deleted from the system.
    responses:
      204:
        description: Target dataset was marked as deleted.
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      403:
        description: Target dataset is not owned by the requesting user.
        body: lib.ForbiddenError
      404:
        description: Target dataset was not located.
        body: lib.NotFoundError
      500:
        description: Internal server error.
        body: lib.ServerError


/user-datasets/{vd-id}/shares/{user-id}:
  displayName: Dataset Sharing

  uriParameters:
    vd-id: lib.VDI-ID
    user-id: lib.User-ID

  /offer:
    displayName: Share Offers
    put:
      displayName: Offer to Share a Dataset
      description: |
        PUT an offer to share (or revoke a share for) a user dataset with
        another target user.
      body:
        application/json: lib.DatasetShareOffer
      responses:
        204:
          description: Share offer was successfully (re)placed.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized.
          body: lib.UnauthorizedError
        422:
          description: Request body failed validation.
          body: lib.UnprocessableEntityError
        500:
          description: Internal server error.
          body: lib.ServerError

  /receipt:
    displayName: Share Receipts
    put:
      displayName: Receive a UD Share
      description: |
        PUT a receipt of a User Dataset share offer.  The receipt can either be
        accepting or rejecting the offered share.
      body:
        application/json: lib.DatasetShareReceipt
      responses:
        204:
          description: Share offer acknowledgement was successfully (re)placed.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        422:
          description: Request body failed validation.
          body: lib.UnprocessableEntityError
        500:
          description: Internal server error.
          body: lib.ServerError
